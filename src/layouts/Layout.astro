---
import "../styles/reset.css";
import "../styles/theme.css";

import { sanityClient } from "sanity:client";

import Logo from "../assets/appno-logo.astro";
import SearchIcon from "../assets/search-magnifying-glass.astro";
import Image from "../components/Image.astro";

const data = await sanityClient.fetch(`*[_type == "global"]`);
const global = data?.[0];

interface Props {
	title: string;
}

const { title } = Astro.props;

// Function: Handle newsletter subscription
if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
		const email = data.get("email");
		console.log(email);
	} catch (error) {
		if (error instanceof Error) {
			console.error(error.message);
		}
	}
}
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link
			href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap"
			rel="stylesheet"
		/>
		<link
			href="https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap"
			rel="stylesheet"
		/>
	</head>
	<body>
		<header class="global-header">
			<Logo />
			<a href="/search"><SearchIcon /></a>
			<button id="globalMenuButton" type="button">Menu</button>

			<dialog id="globalMenuModal">
				<header>
					<Logo fill="var(--c-text-invert)" />
					<form method="dialog">
						<button>Close</button>
					</form>
				</header>
				<p>For testing purposes only.</p>
				<nav>
					<ul role="list">
						<li>Home</li>
						<li>About</li>
						<li>Contact</li>
					</ul>
				</nav>
			</dialog>
		</header>
		<footer class="global-footer">
			<section>
				<Logo />
				<p>{global.footer_description}</p>
				<ul role="list">
					{
						global.footer_socials?.map((social: any) => (
							<li>
								<a href={social.link}>
									<Image node={social.logo?.[0]} />
								</a>
							</li>
						))
					}
				</ul>
			</section>
			<form method="POST">
				<label for="newsletter">{global.footer_newsletter}</label>
				<input
					id="newsletter"
					type="email"
					name="email"
					placeholder="Email address"
					required
				/>
				<button type="submit">Subscribe</button>
			</form>
			<nav aria-label="Footer menu.">
				{
					global.footer_menus?.map((menu: any) => {
						return (
							<div>
								<h2 class="u-eyebrow">{menu.title}</h2>
								<ul role="list">
									{menu.links.map((link: any) => (
										<li>
											<a href={link.url}>{link.label}</a>
										</li>
									))}
								</ul>
							</div>
						);
					})
				}
			</nav>
			<footer>
				<p>{global.footer_copyright}</p>
				<ul role="list">
					{
						global.footer_terms?.[0]?.links?.map((link: any) => (
							<li>
								<a href={link.url}>{link.label}</a>
							</li>
						))
					}
				</ul>
			</footer>
		</footer>
		<slot />
	</body>
</html>

<script>
	// Function: Controls hamburger menu (main navigation)
	const menuButton: HTMLButtonElement | null =
		document.querySelector("#globalMenuButton");
	const menuModal: HTMLDialogElement | null =
		document.querySelector("#globalMenuModal");

	menuButton?.addEventListener("click", () => {
		if (menuModal?.getAttribute("open")) {
			menuModal?.close();
		} else {
			menuModal?.showModal();
		}
	});
</script>

<style>
	.global-header {
		display: flex;
		flex-wrap: wrap;
		gap: 2.5rem;
		padding: 1.75rem 2.25rem;
		align-content: center;
		align-items: center;

		a {
			margin-inline-start: auto;
		}

		button {
			background-color: var(--c-highlight);
			border: none;
			border-radius: 50%;
			aspect-ratio: 1 / 1;
			width: 4rem;
			text-transform: uppercase;
			font-family: var(--f-sans);
			font-weight: 600;
			font-size: 0.75rem;
			letter-spacing: 0.33px;
			color: var(--c-text-invert);

			&:hover,
			&:focus-visible {
				background-color: color-mix(in srgb, var(--c-highlight), white 50%);
			}
		}

		dialog {
			min-width: 100dvw;
			min-height: 100dvh;
			padding: 1.75rem 2.25rem;
			background-color: var(--c-highlight);
			border: none;
			font-family: var(--f-sans);

			button {
				background-color: var(--c-text-invert);
				color: var(--c-text);

				&:hover,
				&:focus-visible {
					background-color: color-mix(in srgb, var(--c-text-invert), white 20%);
					outline-color: var(--c-text-invert);
				}
			}

			header {
				display: flex;
				flex-wrap: wrap;
				align-items: center;
				justify-content: space-between;
				padding-inline-end: 1rem;
			}
		}
	}

	.global-footer {
		--gutter: minmax(2rem, 1fr);

		display: grid;
		/* Content column is divided into a 40% and 60% column, based on global maximum: 78rem (-2 for gap) */
		grid-template-columns:
			[full-start] var(--gutter)
			[content-start]
			min(calc((76rem / 100) * 40), calc(((100% - 8rem) / 100) * 40))
			min(calc((76rem / 100) * 60), calc(((100% - 8rem) / 100) * 60))
			[content-end] var(--gutter) [full-end];
		gap: 2rem;

		padding-block-start: 4rem;
		background-color: var(--c-bg-block);
		font-family: var(--f-mono);
		font-size: 0.875rem;
		color: var(--c-text);

		section:first-child {
			display: flex;
			flex-direction: column;
			gap: 1rem;

			p {
				max-width: 35ch;
			}

			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 1rem;
			}
		}

		form {
			display: flex;
			flex-wrap: wrap;
			gap: 1rem 0;

			label {
				display: block;
				min-width: 100%;
			}

			input,
			button {
				display: inline-block;
			}

			input {
				min-width: 60%;
				height: 3rem;
				padding-inline: 1rem;
				background-color: transparent;
				border: 1px solid var(--c-border);
				color: var(--c-text);
			}

			input::placeholder {
				color: var(--c-text-faded);
			}

			button {
				height: 3rem;
				padding-inline: 1.25rem;
				border: none;
				border-radius: 0;
				font-size: 0.75rem;
			}
		}

		nav {
			display: flex;
			flex-wrap: wrap;
			gap: 2rem 8rem;

			ul {
				display: flex;
				flex-direction: column;
				gap: 1rem;
				margin-block: 1rem;
			}

			a {
				text-decoration: none;
			}
		}

		@media (width > 66rem) {
			section:first-child {
				grid-row: 1 / 3;
			}

			form {
				grid-row: 1;
				grid-column-start: 3;
			}

			nav {
				grid-row: 2;
				grid-column-start: 3;
			}
		}

		footer,
		footer ul {
			display: flex;
			flex-wrap: wrap;
			gap: 1rem 1.5rem;
			color: var(--c-text);
			font-family: var(--f-mono);
			font-size: 0.75rem;
		}

		footer {
			grid-column: full;

			/* Padding ensures content sits within global content grid, whilst container has full-width */
			padding: 1.5rem max(4rem, calc((100% - 78rem) / 2));
			place-content: space-between;
			border-block-start: 1px solid var(--c-border-faded);
		}
	}

	:global(.global-footer > *, .global-footer footer > *) {
		grid-column: content;
	}
</style>
